{
  "version": 3,
  "sources": ["../../@stdlib/utils/define-property/lib/define_property.js", "../../@stdlib/utils/define-property/lib/has_define_property_support.js", "../../@stdlib/utils/define-property/lib/builtin.js", "../../@stdlib/string/base/format-interpolate/lib/is_number.js", "../../@stdlib/string/base/format-interpolate/lib/zero_pad.js", "../../@stdlib/string/base/format-interpolate/lib/format_integer.js", "../../@stdlib/string/base/format-interpolate/lib/is_string.js", "../../@stdlib/string/base/format-interpolate/lib/format_double.js", "../../@stdlib/string/base/format-interpolate/lib/space_pad.js", "../../@stdlib/string/base/format-interpolate/lib/main.js", "../../@stdlib/string/base/format-interpolate/lib/index.js", "../../@stdlib/string/base/format-tokenize/lib/main.js", "../../@stdlib/string/base/format-tokenize/lib/index.js", "../../@stdlib/string/format/lib/is_string.js", "../../@stdlib/string/format/lib/main.js", "../../@stdlib/string/format/lib/index.js", "../../@stdlib/utils/define-property/lib/polyfill.js", "../../@stdlib/utils/define-property/lib/index.js", "../../@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js", "../../@stdlib/utils/define-nonenumerable-read-only-property/lib/index.js", "../../@stdlib/assert/is-string/lib/primitive.js", "../../@stdlib/assert/has-symbol-support/lib/main.js", "../../@stdlib/assert/has-symbol-support/lib/index.js", "../../@stdlib/assert/has-tostringtag-support/lib/main.js", "../../@stdlib/assert/has-tostringtag-support/lib/index.js", "../../@stdlib/utils/native-class/lib/tostring.js", "../../@stdlib/utils/native-class/lib/main.js", "../../@stdlib/assert/has-own-property/lib/main.js", "../../@stdlib/assert/has-own-property/lib/index.js", "../../@stdlib/symbol/ctor/lib/main.js", "../../@stdlib/symbol/ctor/lib/index.js", "../../@stdlib/utils/native-class/lib/tostringtag.js", "../../@stdlib/utils/native-class/lib/polyfill.js", "../../@stdlib/utils/native-class/lib/index.js", "../../@stdlib/assert/is-string/lib/valueof.js", "../../@stdlib/assert/is-string/lib/try2valueof.js", "../../@stdlib/assert/is-string/lib/object.js", "../../@stdlib/assert/is-string/lib/main.js", "../../@stdlib/assert/is-string/lib/index.js", "../../@stdlib/assert/is-boolean/lib/primitive.js", "../../@stdlib/boolean/ctor/lib/main.js", "../../@stdlib/boolean/ctor/lib/index.js", "../../@stdlib/assert/is-boolean/lib/tostring.js", "../../@stdlib/assert/is-boolean/lib/try2serialize.js", "../../@stdlib/assert/is-boolean/lib/object.js", "../../@stdlib/assert/is-boolean/lib/main.js", "../../@stdlib/assert/is-boolean/lib/index.js", "../../@stdlib/nlp/tokenize/lib/abbreviations.json", "../../@stdlib/nlp/tokenize/lib/emojis.json", "../../@stdlib/nlp/tokenize/lib/contractions.json", "../../@stdlib/nlp/tokenize/lib/main.js", "../../@stdlib/nlp/tokenize/lib/index.js", "../../@stdlib/string/base/trim/lib/has_builtin.js", "../../@stdlib/string/base/trim/lib/builtin.js", "../../@stdlib/string/base/trim/lib/check.js", "../../@stdlib/string/base/replace/lib/main.js", "../../@stdlib/string/base/replace/lib/index.js", "../../@stdlib/string/base/trim/lib/polyfill.js", "../../@stdlib/string/base/trim/lib/main.js", "../../@stdlib/string/base/trim/lib/index.js", "../../@stdlib/nlp/sentencize/lib/main.js", "../../@stdlib/nlp/sentencize/lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './define_property.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeroPad;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInteger;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e' );\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatDouble;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = spacePad;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar formatInteger = require( './format_integer.js' );\nvar isString = require( './is_string.js' );\nvar formatDouble = require( './format_double.js' );\nvar spacePad = require( './space_pad.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating whether a value is `NaN`.\n*\n* @private\n* @param {*} value - input value\n* @returns {boolean} boolean indicating whether a value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 4 );\n* // returns false\n*/\nfunction isnan( value ) { // explicitly define a function here instead of `@stdlib/math/base/assert/is-nan` in order to avoid circular dependencies\n\treturn ( value !== value );\n}\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\ttoken.arg = String( token.arg );\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ? String( token.arg ) : fromCharCode( num ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInterpolate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate string from a token array by interpolating values.\n*\n* @module @stdlib/string/base/format-interpolate\n*\n* @example\n* var formatInterpolate = require( '@stdlib/string/base/format-interpolate' );\n*\n* var tokens = ['Hello ', { 'specifier': 's' }, '!' ];\n* var out = formatInterpolate( tokens, 'World' );\n* // returns 'Hello World!'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatTokenize;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tokenize a string into an array of string parts and format identifier objects.\n*\n* @module @stdlib/string/base/format-tokenize\n*\n* @example\n* var formatTokenize = require( '@stdlib/string/base/format-tokenize' );\n*\n* var str = 'Hello %s!';\n* var tokens = formatTokenize( str );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar interpolate = require( './../../base/format-interpolate' );\nvar tokenize = require( './../../base/format-tokenize' );\nvar isString = require( './is_string.js' );\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\targs = [ tokenize( str ) ];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = format;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Insert supplied variable values into a format string.\n*\n* @module @stdlib/string/format\n*\n* @example\n* var format = require( '@stdlib/string/format' );\n*\n* var out = format( '%s %s!', 'Hello', 'World' );\n* // returns 'Hello World!'\n*\n* out = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( './has_define_property_support.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only property.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-property\n*\n* @example\n* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol` support.\n*\n* @module @stdlib/assert/has-symbol-support\n*\n* @example\n* var hasSymbolSupport = require( '@stdlib/assert/has-symbol-support' );\n*\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasSymbols = require( './../../has-symbol-support' );\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `toStringTag` support.\n*\n* @module @stdlib/assert/has-tostringtag-support\n*\n* @example\n* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );\n*\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nmodule.exports = toStr;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property.\n*\n* @module @stdlib/assert/has-own-property\n*\n* @example\n* var hasOwnProp = require( '@stdlib/assert/has-own-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasOwnProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = Sym;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Symbol factory.\n*\n* @module @stdlib/symbol/ctor\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n*\n* var s = Symbol( 'beep' );\n* // returns <symbol>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Symbol = require( '@stdlib/symbol/ctor' );\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nmodule.exports = toStrTag;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar toStringTag = require( './tostringtag.js' );\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* var nativeClass = require( '@stdlib/utils/native-class' );\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = valueOf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar valueOf = require( './valueof.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2valueof.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' );\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isObject;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isPrimitive;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a boolean.\n*\n* @name Boolean\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {(boolean|Boolean)} boolean\n*\n* @example\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\nvar Bool = Boolean; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = Bool;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean constructor.\n*\n* @module @stdlib/boolean/ctor\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar Boolean = require( '@stdlib/boolean/ctor' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n* var isBoolean = require( '@stdlib/assert/is-boolean' );\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* var Boolean = require( '@stdlib/boolean/ctor' );\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "{\n    \"i.e.\": [\"i.e.\"],\n    \"I.e.\": [\"I.e.\"],\n    \"I.E.\": [\"I.E.\"],\n    \"e.g.\": [\"e.g.\"],\n    \"E.g.\": [\"E.g.\"],\n    \"E.G.\": [\"E.G.\"],\n    \"et al.\": [\"et al.\"],\n    \"etc.\": [\"etc.\"],\n    \"vs.\": [\"vs.\"],\n    \"A.S.A.P\": [\"A.S.A.P\"],\n    \"E.T.A.\": [\"E.T.A.\"],\n    \"D.I.Y\": [\"D.I.Y\"],\n    \"R.S.V.P\": [\"R.S.V.P\"],\n    \"P.S.\": [\"P.S.\"],\n    \"B.Y.O.B\": [\"B.Y.O.B\"],\n    \"Ms.\": [\"Ms.\"],\n    \"Mr.\": [\"Mr.\"],\n    \"Dr.\": [\"Dr.\"],\n    \"Prof.\": [\"Prof.\"],\n    \"Mrs.\": [\"Mrs.\"],\n    \"Messrs.\": [\"Messrs.\"],\n    \"Gov.\": [\"Gov.\"],\n    \"Gen.\": [\"Gen.\"],\n    \"Lt.\": [\"Lt.\"],\n    \"Col.\":[\"Col.\"],\n    \"Mt.\": [\"Mt.\"],\n    \"Bros.\": [\"Bros.\"],\n    \"Corp.\": [\"Corp.\"],\n    \"Co.\": [\"Co.\"],\n    \"co.\": [\"co.\"],\n    \"Inc.\": [\"Inc.\"],\n    \"Ltd.\": [\"Ltd.\"],\n    \"Rep.\": [\"Rep.\"],\n    \"Sen.\": [\"Sen.\"],\n    \"Jr.\": [\"Jr.\"],\n    \"Sr.\": [\"Sr.\"],\n    \"Ph.D.\": [\"Ph.D.\"],\n    \"J.D.\": [\"J.D.\"],\n    \"M.D.\": [\"M.D.\"],\n    \"Rev.\": [\"Rev.\"],\n    \"Adm.\": [\"Adm.\"],\n    \"St.\": [\"St.\"],\n    \"a.m.\": [\"a.m.\"],\n    \"p.m.\": [\"p.m.\"],\n    \"b.c.\": [\"b.c.\"],\n    \"B.C.\": [\"B.C.\"],\n    \"a.d.\": [\"a.d.\"],\n    \"A.D.\": [\"A.D.\"],\n    \"b.c.e.\": [\"b.c.e.\"],\n    \"B.C.E.\": [\"B.C.E.\"],\n    \"Jan.\": [\"Jan.\"],\n    \"Feb.\": [\"Feb.\"],\n    \"Mar.\": [\"Mar.\"],\n    \"Apr.\": [\"Apr.\"],\n    \"May.\": [\"May.\"],\n    \"Jun.\": [\"Jun.\"],\n    \"Jul.\": [\"Jul.\"],\n    \"Aug.\": [\"Aug.\"],\n    \"Sep.\": [\"Sep.\"],\n    \"Sept.\": [\"Sept.\"],\n    \"Oct.\": [\"Oct.\"],\n    \"Nov.\": [\"Nov.\"],\n    \"Dec.\": [\"Dec.\"],\n    \"Ala.\": [\"Ala.\"],\n    \"Ariz.\": [\"Ariz.\"],\n    \"Ark.\": [ \"Ark.\"],\n    \"Calif.\": [\"Calif.\"],\n    \"Colo.\": [\"Colo.\"],\n    \"Conn.\": [\"Conn.\"],\n    \"Del.\": [ \"Del.\"],\n    \"D.C.\": [\"D.C.\"],\n    \"Fla.\": [ \"Fla.\"],\n    \"Ga.\": [\"Ga.\"],\n    \"Ill.\": [\"Ill.\"],\n    \"Ind.\": [\"Ind.\"],\n    \"Kans.\": [\"Kans.\"],\n    \"Kan.\": [\"Kan.\"],\n    \"Ky.\": [\"Ky.\"],\n    \"La.\": [\"La.\"],\n    \"Md.\": [\"Md.\"],\n    \"Mass.\": [\"Mass.\"],\n    \"Mich.\": [\"Mich.\"],\n    \"Minn.\": [\"Minn.\"],\n    \"Miss.\": [\"Miss.\"],\n    \"Mo.\": [\"Mo.\"],\n    \"Mont.\": [\"Mont.\"],\n    \"Nebr.\": [\"Nebr.\"],\n    \"Neb.\": [\"Neb.\"],\n    \"Nev.\": [ \"Nev.\"],\n    \"N.H.\": [\"N.H.\"],\n    \"N.J.\": [\"N.J.\"],\n    \"N.M.\": [\"N.M.\"],\n    \"N.Y.\": [\"N.Y.\"],\n    \"N.C.\": [\"N.C.\"],\n    \"N.D.\": [\"N.D.\"],\n    \"Okla.\": [\"Okla.\"],\n    \"Ore.\": [\"Ore.\"],\n    \"Pa.\": [\"Pa.\"],\n    \"Tenn.\": [\"Tenn.\"],\n    \"Va.\": [\"Va.\"],\n    \"Wash.\": [\"Wash.\"],\n    \"Wis.\": [\"Wis.\"]\n}\n", "{\n    \"^_^\": [\"^_^\"],\n    \"=D\": [\"=D\"],\n    \";-p\": [\";-p\"],\n    \":O\": [\":O\"],\n    \":-/\": [\":-/\"],\n    \"xD\": [\"xD\"],\n    \"V_V\": [\"V_V\"],\n    \";(\": [\";(\"],\n    \"(:\": [\"(:\"],\n    \"\\\")\": [\"\\\")\"],\n    \":Y\": [\":Y\"],\n    \":]\": [\":]\"],\n    \":3\": [\":3\"],\n    \":(\": [\":(\"],\n    \":-)\": [\":-)\"],\n    \"=3\": [\"=3\"],\n    \":))\": [\":))\"],\n    \":>\": [\":>\"],\n    \";p\": [\";p\"],\n    \":p\": [\":p\"],\n    \"=[[\": [\"=[[\"],\n    \"xDD\": [\"xDD\"],\n    \"<333\": [\"<333\"],\n    \"<33\": [\"<33\"],\n    \":P\": [\":P\"],\n    \"o.O\": [\"o.O\"],\n    \"<3\": [\"<3\"],\n    \";-)\": [\";-)\"],\n    \":)\": [\":)\"],\n    \"-_-\": [\"-_-\"],\n    \":')\": [\":')\"],\n    \"o_O\": [\"o_O\"],\n    \";)\": [\";)\"],\n    \"=]\": [\"=]\"],\n    \"(=\": [\"(=\"],\n    \"-__-\": [\"-__-\"],\n    \":/\": [\":/\"],\n    \":0\": [\":0\"],\n    \"(^_^)\": [\"(^_^)\"],\n    \";D\": [\";D\"],\n    \"o_o\": [\"o_o\"],\n    \":((\": [\":((\"],\n    \"=)\": [\"=)\"]\n}\n", "{\n    \"'s\": [\"'s\"],\n    \"'S\": [\"'S\"],\n    \"ain't\": [\"ai\", \"n't\"],\n    \"aint\": [\"ai\", \"nt\"],\n    \"Ain't\": [\"Ai\", \"n't\"],\n    \"aren't\": [\"are\", \"n't\"],\n    \"arent\": [\"are\", \"nt\"],\n    \"Aren't\": [\"Are\", \"n't\"],\n    \"can't\": [\"ca\", \"n't\"],\n    \"cant\": [\"ca\", \"nt\"],\n    \"Can't\": [\"Ca\", \"n't\"],\n    \"can't've\": [\"ca\", \"n't\", \"'ve\"],\n    \"'cause\": [\"'cause'\"],\n    \"cannot\": [\"can\", \"not\"],\n    \"Cannot\": [\"Can\", \"not\"],\n    \"could've\": [\"could\", \"'ve\"],\n    \"couldve\": [\"could\", \"ve\"],\n    \"Could've\": [\"Could\", \"'ve\"],\n    \"couldn't\": [\"could\", \"n't\"],\n    \"couldnt\": [\"could\", \"nt\"],\n    \"Couldn't\": [\"Could\", \"n't\"],\n    \"couldn't've\": [\"could\", \"n't\", \"'ve\"],\n    \"couldntve\": [\"could\", \"nt\", \"ve\"],\n    \"Couldn't've\": [\"Could\", \"n't\", \"'ve\"],\n    \"didn't\": [\"did\", \"n't\"],\n    \"didnt\": [\"did\", \"nt\"],\n    \"Didn't\": [\"Did\", \"n't\"],\n    \"doesn't\": [\"does\", \"n't\"],\n    \"doesnt\": [\"does\", \"nt\"],\n    \"Doesn't\": [\"Does\", \"n't\"],\n    \"don't\": [\"do\", \"n't\"],\n    \"dont\": [\"do\", \"nt\"],\n    \"Don't\": [\"Do\", \"n't\"],\n    \"hadn't\": [\"had\", \"n't\"],\n    \"hadnt\": [\"had\", \"nt\"],\n    \"Hadn't\": [\"Had\", \"n't\"],\n    \"hadn't've\": [\"had\", \"n't\", \"'ve\"],\n    \"hasn't\": [\"has\", \"n't\"],\n    \"hasnt\": [\"has\", \"nt\"],\n    \"haven't\": [\"have\", \"n't\"],\n    \"havent\": [\"have\", \"nt\"],\n    \"he'd\": [\"he\", \"'d\"],\n    \"hed\": [\"he\", \"d\"],\n    \"he'd've\": [\"he\", \"'d\", \"'ve\"],\n    \"hedve\": [\"he\", \"d\", \"ve\"],\n    \"he'll\": [\"he\", \"'ll\"],\n    \"he'll've\": [\"he\", \"'ll\", \"'ve\"],\n    \"he's\": [\"he\", \"'s\"],\n    \"hes\": [\"he\", \"s\"],\n    \"how'd\": [\"how\", \"'d\"],\n    \"howd\": [\"how\", \"d\"],\n    \"how'd'y\": [ \"how\", \"'d\", \"'y\" ],\n    \"how'll\": [\"how\", \"'ll\"],\n    \"howll\": [\"how\", \"ll\"],\n    \"how's\": [\"how\", \"'s\"],\n    \"hows\": [\"how\", \"s\"],\n    \"I'd\": [\"I\", \"'d\"],\n    \"I'd've\": [\"I\", \"'d\", \"'ve\"],\n    \"I'll\": [\"I\", \"'ll\"],\n    \"i'll\": [\"i\", \"'ll\"],\n    \"I'll've\": [\"I\", \"'ll\", \"'ve\"],\n    \"i'll've\": [\"i\", \"'ll\", \"'ve\"],\n    \"I'm\": [\"I\", \"'m\"],\n    \"i'm\": [\"i\", \"'m\"],\n    \"Im\": [\"I\", \"m\"],\n    \"im\": [\"i\", \"m\"],\n    \"I'ma\": [\"I\", \"'ma\"],\n    \"i'ma\": [\"i\", \"'ma\"],\n    \"I've\": [\"I\", \"'ve\"],\n    \"i've\": [\"i\", \"'ve\"],\n    \"isn't\": [\"is\", \"n't\"],\n    \"isnt\": [\"is\", \"nt\"],\n    \"Isn't\": [\"Is\", \"n't\"],\n    \"It'd\": [\"It\", \"'d\"],\n    \"it'd\": [\"it\", \"'d\"],\n    \"it'd've\": [\"it\", \"'d\", \"'ve\"],\n    \"it'll've\": [\"it\", \"'ll\", \"'ve\"],\n    \"it'll\": [\"it\", \"'ll\"],\n    \"itll\": [\"it\", \"ll\"],\n    \"it's\": [\"it\", \"'s\"],\n    \"let's\": [\"let\", \"'s\"],\n    \"lets\": [\"let\", \"s\"],\n    \"ma'am\": [\"ma'am\"],\n    \"mayn't\": [\"may\", \"n't\"],\n    \"mightn't\": [\"might\", \"n't\"],\n    \"mightn't've\": [\"might\", \"n't\", \"'ve\"],\n    \"might've\": [\"might\", \"'ve\"],\n    \"mustn't\": [\"must\", \"n't\"],\n    \"mustn't've\": [\"must\", \"n't\",\"'ve\"],\n    \"must've\": [\"must\", \"'ve\"],\n    \"needn't\": [\"need\", \"n't\"],\n    \"needn't've\": [\"need\", \"n't\", \"'ve\"],\n    \"not've\": [\"not\", \"'ve\"],\n    \"o'clock\": [\"o'clock\"],\n    \"oughtn't\": [\"ought\", \"n't\"],\n    \"oughtn't've\": [\"ought\", \"n't\", \"'ve\"],\n    \"so've\": [\"so\", \"'ve\"],\n    \"so's\": [\"so\", \"'s\"],\n    \"shan't\": [\"sha\", \"n't\"],\n    \"sha'n't\": [\"sha'\", \"n't\"],\n    \"shan't've\": [\"sha\", \"n't\", \"'ve\"],\n    \"she'd\": [\"she\", \"'d\"],\n    \"she'd've\": [\"she\", \"'d\", \"'ve\"],\n    \"she'll\": [\"she\", \"'ll\"],\n    \"she'll've\": [\"she\", \"'ll\", \"'ve\"],\n    \"she's\": [\"she\", \"'s\"],\n    \"should've\": [\"should\", \"'ve\"],\n    \"shouldn't\": [\"should\", \"n't\"],\n    \"shouldn't've\": [\"should\", \"n't\", \"'ve\"],\n    \"that'd\": [\"that\", \"'d\"],\n    \"that'd've\": [\"that\", \"'d\", \"'ve\"],\n    \"that's\": [\"that\", \"'s\"],\n    \"thats\": [\"that\", \"s\"],\n    \"there'd\": [\"there\", \"'d\"],\n    \"there'd've\": [\"there\", \"'d\", \"'ve\"],\n    \"there's\": [\"there\", \"'s\"],\n    \"they'd\": [\"they\", \"'d\"],\n    \"They'd\": [\"They\", \"'d\"],\n    \"they'd've\": [\"they\", \"'d\", \"'ve\"],\n    \"They'd've\": [\"They\", \"'d\", \"'ve\"],\n    \"they'll\": [\"they\", \"'ll\"],\n    \"They'll\": [\"They\", \"'ll\"],\n    \"they'll've\": [\"they\", \"'ll\", \"'ve\"],\n    \"They'll've\": [\"They\", \"'ll\", \"'ve\"],\n    \"they're\": [\"they\", \"'re\"],\n    \"They're\": [\"They\", \"'re\"],\n    \"they've\": [\"they\", \"'ve\"],\n    \"They've\": [\"They\", \"'ve\"],\n    \"to've\": [\"to\", \"'ve\"],\n    \"wasn't\": [\"was\", \"n't\"],\n    \"we'd\": [\"we\", \"'d\"],\n    \"We'd\": [\"We\", \"'d\"],\n    \"we'd've\": [\"we\", \"'d\", \"'ve\"],\n    \"we'll\": [\"we\", \"'ll\"],\n    \"We'll\": [\"We\", \"'ll\"],\n    \"we'll've\": [\"we\", \"'ll\", \"'ve\"],\n    \"We'll've\": [\"We\", \"'ll\", \"'ve\"],\n    \"we're\": [\"we\", \"'re\"],\n    \"We're\": [\"We\", \"'re\"],\n    \"we've\": [\"we\", \"'ve\"],\n    \"We've\": [\"We\", \"'ve\"],\n    \"weren't\": [\"were\", \"n't\"],\n    \"what'll\": [\"what\", \"'ll\"],\n    \"what'll've\": [\"what\", \"'ll\", \"'ve\"],\n    \"what're\": [\"what\", \"'re\"],\n    \"what's\": [\"what\", \"'s\"],\n    \"what've\": [\"what\", \"'ve\"],\n    \"when's\": [\"when\", \"'s\"],\n    \"when've\": [\"when\", \"'ve\"],\n    \"where'd\": [\"where\", \"'d\"],\n    \"where's\": [\"where\", \"'s\"],\n    \"where've\": [\"where\", \"'ve\"],\n    \"who'd\": [\"who\", \"'d\"],\n    \"who'll\": [\"who\", \"'ll\"],\n    \"who'll've\": [\"who\", \"'ll'\", \"'ve'\"],\n    \"who're\": [\"who\", \"'re\"],\n    \"who's\": [\"who\", \"'s\"],\n    \"who've\": [\"who\", \"'ve\"],\n    \"why've\": [\"why\", \"'ve\"],\n    \"why'll\": [\"why\", \"'ll\"],\n    \"why're\": [\"why\", \"'re\"],\n    \"why's\": [\"why\", \"'s\"],\n    \"will've\": [\"will\", \"'ve\"],\n    \"won't\": [\"wo\", \"n't\"],\n    \"wont\": [\"wo\", \"nt\"],\n    \"won't've\": [\"wo\", \"n't\", \"'ve\"],\n    \"would've\": [\"would\", \"'ve\"],\n    \"wouldn't\": [\"would\", \"n't\"],\n    \"wouldn't've\": [\"would\", \"n't\", \"'ve\"],\n    \"y'all\": [\"y'\", \"all\"],\n    \"y'all'd\": [\"y'\", \"all\", \"'d\"],\n    \"y'all'd've\": [\"y'\",\"all\", \"'d\", \"'ve\"],\n    \"y'all're\": [ \"y'\", \"all\", \"'re'\"],\n    \"y'all've\": [ \"y'\", \"all\", \"ve\"],\n    \"you'd\": [\"you\", \"'d\"],\n    \"You'd\": [\"You\", \"'d\"],\n    \"you'd've\": [\"you\", \"'d\", \"'ve\"],\n    \"You'd've\": [\"You\", \"'d\", \"'ve\"],\n    \"you'll\": [\"you\", \"'ll\"],\n    \"You'll\": [\"You\", \"'ll\"],\n    \"you'll've\": [\"you\", \"'ll\", \"'ve\"],\n    \"You'll've\": [\"You\", \"'ll\", \"'ve\"],\n    \"you're\": [\"you\", \"'re\"],\n    \"You're\": [\"You\", \"'re\"],\n    \"you've\": [\"you\", \"'ve\"],\n    \"You've\": [\"You\", \"'ve\"]\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar ABBRS = require( './abbreviations.json' );\nvar EMOJIS = require( './emojis.json' );\nvar CONTRACT = require( './contractions.json' );\n\n\n// VARIABLES //\n\nvar REGEXP_PREFIXES = /^([,([{*<\"“'`‘]|\\.{1,3})/gi;\nvar REGEXP_SUFFIXES = /([,.!?%*>:;\"'”`)\\]}]|\\.\\.\\.)$/gi;\n\n\n// FUNCTIONS //\n\n/**\n* Extends an array by the elements of another array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} ext - array to extend `arr` with\n* @returns {Array} mutated input array\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* var out = extend( arr, [ 4, 5 ] );\n* // returns [ 1, 2, 3, 4, 5 ]\n*/\nfunction extend( arr, ext ) {\n\tvar i;\n\tfor ( i = 0; i < ext.length; i++ ) {\n\t\tarr.push( ext[ i ] );\n\t}\n\treturn arr;\n}\n\n/**\n* Tokenizes a substring.\n*\n* @private\n* @param {string} substr - input string\n* @returns {Array} token array\n*\n* @example\n* var str = '(never)';\n* var out = tokenizeSubstring( str );\n* // returns [ '(', 'never', ')' ]\n*/\nfunction tokenizeSubstring( substr ) {\n\tvar prefixes = [];\n\tvar suffixes = [];\n\tvar match;\n\tvar done;\n\tvar res;\n\n\tdo {\n\t\tif (\n\t\t\t!EMOJIS[ substr ] &&\n\t\t\t!ABBRS[ substr ] &&\n\t\t\t!CONTRACT[ substr ]\n\t\t) {\n\t\t\tmatch = substr.split( REGEXP_PREFIXES );\n\t\t\tif ( match.length > 1 ) {\n\t\t\t\tprefixes.push( match[ 1 ] );\n\t\t\t\tsubstr = match[ 2 ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmatch = substr.split( REGEXP_SUFFIXES );\n\t\t\t\tif ( match.length > 1 ) {\n\t\t\t\t\tsubstr = match[ 0 ];\n\t\t\t\t\tsuffixes.unshift( match[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdone = true;\n\t\t}\n\t} while ( !done );\n\n\tres = prefixes;\n\tif ( substr ) {\n\t\tres.push( substr );\n\t}\n\n\t// If the last suffix is an ellipsis, move it to the front of the suffix array:\n\tif ( suffixes[ suffixes.length-1 ] === '...' ) {\n\t\tsuffixes.pop();\n\t\tsuffixes.unshift( '...' );\n\t}\n\textend( res, suffixes );\n\treturn res;\n}\n\n\n// MAIN //\n\n/**\n* Tokenize a string.\n*\n* @param {string} str - input string\n* @param {boolean} [keepWhitespace=false] - boolean indicating whether whitespace characters should be returned as part of the token array\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a boolean\n* @returns {Array} array of tokens\n*\n* @example\n* var str = 'Hello World!';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*\n* @example\n* var str = '';\n* var out = tokenize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*/\nfunction tokenize( str, keepWhitespace ) {\n\tvar subtkns;\n\tvar substrs;\n\tvar tokens;\n\tvar substr;\n\tvar cache;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isBoolean( keepWhitespace ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a boolean. Value: `%s`.', keepWhitespace ) );\n\t\t}\n\t}\n\tif ( !str ) {\n\t\treturn [];\n\t}\n\n\t// Split on whitespace:\n\tif ( keepWhitespace ) {\n\t\tsubstrs = str.split( /(\\s+)/ );\n\t} else {\n\t\tsubstrs = str.split( /\\s+/ );\n\t}\n\n\t// Set up cache to hold tokens for substring matches:\n\tcache = {};\n\n\t// Initialize token array:\n\ttokens = [];\n\n\tfor ( i = 0; i < substrs.length; i++ ) {\n\t\tsubstr = substrs[ i ];\n\t\tif ( hasOwnProp( cache, substr ) ) {\n\t\t\textend( tokens, cache[ substr ] );\n\t\t}\n\t\telse {\n\t\t\tsubtkns = tokenizeSubstring( substr );\n\t\t\textend( tokens, subtkns );\n\t\t\tcache[ substr ] = subtkns;\n\t\t}\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tokenize;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tokenize a string.\n*\n* @module @stdlib/nlp/tokenize\n*\n* @example\n* var tokenize = require( '@stdlib/nlp/tokenize' );\n*\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*\n* str = 'Hello World!';\n* out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof String.prototype.trim !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar trim = String.prototype.trim;\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar trim = require( './builtin.js' );\n\n\n// VARIABLES //\n\nvar str1 = ' \\n\\t\\r\\n\\f\\v\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar str2 = '\\u180e';\n\n\n// MAIN //\n\n/**\n* Tests the built-in `String.prototype.trim()` implementation when provided whitespace.\n*\n* ## Notes\n*\n* -   For context, see <https://github.com/stdlib-js/stdlib/commit/c3d6458aa08bbd4bd6bf13e3643422f3b2a65dd9>. In short, we can only rely on the built-in `trim` method when it does not consider the Mongolian space separator as whitespace.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected value\n*\n* @example\n* var b = test();\n* // returns <boolean>\n*/\nfunction test() {\n\treturn ( trim.call( str1 ) === '' ) && ( trim.call( str2 ) === str2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Replaces search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {RegExp} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* var capitalize = require( '@stdlib/string/base/capitalize' );\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer );\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\nfunction replace( str, search, newval ) {\n\treturn str.replace( search, newval );\n}\n\n\n// EXPORTS //\n\nmodule.exports = replace;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @module @stdlib/string/base/replace\n*\n* @example\n* var replace = require( '@stdlib/string/base/replace' );\n*\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( './../../../base/replace' );\n\n\n// VARIABLES //\n\n// The following regular expression should suffice to polyfill (most?) all environments.\nvar RE = /^[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*([\\S\\s]*?)[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*$/;\n\n\n// MAIN //\n\n/**\n* Trims whitespace characters from the beginning and end of a string.\n*\n* @private\n* @param {string} str - input string\n* @returns {string} trimmed string\n*\n* @example\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* @example\n* var out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* @example\n* var out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\nfunction trim( str ) {\n\treturn replace( str, RE, '$1' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './builtin.js' );\n\n\n// MAIN //\n\n/**\n* Trims whitespace characters from the beginning and end of a string.\n*\n* @param {string} str - input string\n* @returns {string} trimmed string\n*\n* @example\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* @example\n* var out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* @example\n* var out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\nfunction trim( str ) {\n\treturn builtin.call( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim whitespace characters from the beginning and end of a string.\n*\n* @module @stdlib/string/base/trim\n*\n* @example\n* var trim = require( '@stdlib/string/base/trim' );\n*\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar check = require( './check.js' );\nvar polyfill = require( './polyfill.js' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar trim;\nif ( HAS_BUILTIN && check() ) {\n\ttrim = main;\n} else {\n\ttrim = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar tokenize = require( './../../tokenize' );\nvar trim = require( '@stdlib/string/base/trim' );\n\n\n// VARIABLES //\n\nvar RE_CAPITALIZED = /^[A-Z][a-z]{0,4}$/;\nvar RE_CAPITALIZED_PERIOD = /^([A-Z]\\.)*[A-Z]$/;\nvar RE_NUMBER = /^[0-9]$/;\nvar RE_PREFIXES = /^[{[(<:;\"'”`]/;\nvar RE_SUFFIXES = /[})\\]>:;\"'”`]$/;\n\n\n// FUNCTIONS //\n\n/**\n* Checks whether the token at a specified index is an end-of-sentence token.\n*\n* ## Notes\n*\n* -   The function uses a set of heuristics to determine whether a token is an end-of-sentence token.\n* -   Periods (`.`), exclamation points (`!`), and question marks (`?`). are treated as possible end-of-sentence tokens.\n* -   The function expects that the input array of tokens has been tokenized using the `@stdlib/nlp/tokenize` function, which tokenizes a string into an array of tokens and handles titles (`Dr.`, etc.), abbreviations such as `e.g.`, and the like, keeping them as single tokens. For example, the string `Dr. Smith is a professor at MIT.` is tokenized as `['Dr.', 'Smith', 'is', 'a', 'professor', 'at', 'MIT', '.']`. This function henceforth only considers standalone characters as possible end-of-sentence tokens, and does not consider them as end-of-sentence tokens if they are part of a larger token.\n*\n* @private\n* @param {StringArray} tokens - array of tokens\n* @param {NonNegativeInteger} i - index\n* @returns {boolean} boolean indicating whether the token at a specified index is an end-of-sentence token\n*/\nfunction isEndOfSentence( tokens, i ) {\n\tvar token;\n\tvar im1 = i - 1;\n\tvar ip1 = i + 1;\n\ttoken = tokens[ i ];\n\tif (\n\t\ttoken === '.' &&\n\t\t!RE_CAPITALIZED.test( tokens[ im1 ] ) && // for other short abbreviations and bullet points\n\t\t!RE_CAPITALIZED_PERIOD.test( tokens[ im1 ] ) && // acronyms of the form A.B.C.\n\t\t!RE_NUMBER.test( tokens[ im1 ] ) && // numbered list items\n\t\t!RE_PREFIXES.test( tokens[ im1 ] ) &&\n\t\t!RE_SUFFIXES.test( tokens[ ip1 ] )\n\t) {\n\t\treturn true;\n\t}\n\tif (\n\t\t( token === '!' || token === '?' ) &&\n\t\t!RE_PREFIXES.test( tokens[ im1 ] ) &&\n\t\t!RE_SUFFIXES.test( tokens[ ip1 ] )\n\t) {\n\t\treturn true;\n\t}\n\tif (\n\t\tRE_SUFFIXES.test( token ) &&\n\t\t( tokens[ im1 ] === '.' || tokens[ im1 ] === '!' || tokens[ im1 ] === '?' )\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Splits a string into an array of sentences.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string\n* @returns {StringArray} array of sentences\n*\n* @example\n* var str = 'Hello World! How are you?';\n* var out = sentencize( str );\n* // returns [ 'Hello World!', 'How are you?' ]\n*\n* @example\n* var str = '';\n* var out = sentencize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = sentencize( str );\n* // returns [ 'Hello Mrs. Maple, could you call me back?' ]\n*/\nfunction sentencize( str ) {\n\tvar current;\n\tvar tokens;\n\tvar out;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a string. Value: `' + str + '`.' );\n\t}\n\ttokens = tokenize( str, true );\n\tcurrent = '';\n\tout = [];\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\tcurrent += tokens[ i ];\n\t\tif ( isEndOfSentence( tokens, i ) ) {\n\t\t\tout.push( trim( current ) );\n\t\t\tcurrent = '';\n\t\t}\n\t}\n\tif ( current !== '' ) {\n\t\tout.push( trim( current ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sentencize;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a string into an array of sentences.\n*\n* @module @stdlib/nlp/sentencize\n*\n* @example\n* var sentencize = require( '@stdlib/nlp/sentencize' );\n*\n* var str = 'Hello Mrs. Maple, could you call me back? I need to talk to you about something.';\n* var out = sentencize( str );\n* // returns [ 'Hello Mrs. Maple, could you call me back?', 'I need to talk to you about something.' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_main", "require_lib", "require_is_string", "require_main", "require_lib", "require_lib", "require_main", "require_lib", "require_main", "require_lib", "require_main", "require_lib", "require_main", "require_main", "require_lib", "require_main", "require_lib", "Symbol", "require_polyfill", "require_lib", "require_main", "require_lib", "require_primitive", "require_main", "require_lib", "require_tostring", "require_object", "Boolean", "require_main", "require_lib", "require_main", "require_lib", "require_builtin", "require_main", "require_lib", "require_polyfill", "require_main", "require_lib", "require_main", "require_lib"]
}
